--DROP-TABLE-------------------------------------------------------
DROP TABLE IF EXISTS activity,availability_risk,currencies,priority_tasks,projects,risks,roles,states_tasks,tasks,users;


--CATEGORY------------------------------------------------
CREATE TABLE roles(
    ROLE_ID SERIAL PRIMARY KEY,
	ROLE_NAME CHARACTER VARYING( 15 ) UNIQUE NOT NULL
);

CREATE TABLE availability_risk(
	AVAILABILITY_ID SERIAL PRIMARY KEY,
	AVAILABILITY_NAME CHARACTER VARYING( 4 ) UNIQUE NOT NULL
);

CREATE TABLE currencies(	
    CURRENCY_ID SERIAL PRIMARY KEY,
	CURRENCY_EXCHANGE_RATE NUMERIC,
	CURRENCY_NAME CHARACTER VARYING( 3 ) UNIQUE NOT NULL
);

CREATE TABLE states_tasks(
	STATE_ID SERIAL PRIMARY KEY,
	STATE_NAME CHARACTER VARYING( 15 ) UNIQUE NOT NULL
);

CREATE TABLE priority_tasks(
	PRIORITY_ID SERIAL PRIMARY KEY,
	PRIOROTY_NAME CHARACTER VARYING( 10 ) UNIQUE NOT NULL
);


--CREATE-TABLE------------------------------------------------------
CREATE TABLE users(
	USER_ID SERIAL PRIMARY KEY,
	USER_NAME TEXT,
	USER_SURNAME TEXT,
	USER_PATRONYMIC TEXT,
	USER_PASSWORD CHARACTER VARYING( 8 ) NOT NULL,
	USER_IMG TEXT,
	USER_PHONE CHARACTER VARYING( 100 ) UNIQUE NULL,
	USER_EMAIL CHARACTER VARYING( 255 ) UNIQUE NULL,
	USER_NICKNAME CHARACTER VARYING( 25 ) UNIQUE NOT NULL,
	
	--FK-----------------------------------
	USER_ROLE_ID INTEGER REFERENCES roles(ROLE_ID) DEFAULT 3 NOT NULL
);

CREATE TABLE activity(
    LOG_ID SERIAL,
	LOG_TIME TIME,
	LOG_DATE DATE,
	LOG_USER_IP CIDR NOT NULL,
	
	--FK-----------------------------------
	LOG_USER_ID INTEGER REFERENCES users(USER_ID) NOT NULL
);

CREATE TABLE projects(
	PROJECT_ID SERIAL PRIMARY KEY,
	PROJECT_DATE_CREATION DATE NOT NULL,
	PROJECT_TIME_CREATION TIME NOT NULL,
	PROJECT_TERM_DELIVERY TIMESTAMP WITHOUT TIME ZONE,
	PROJECT_COST_DELIVERY NUMERIC,
	PROJECT_NAME CHARACTER VARYING( 255 ) NOT NULL,
	PROJECT_DESCRIPTION CHARACTER VARYING( 255 ),
	
	--FK-----------------------------------
	PROJECT_CURRENCY_ID INTEGER REFERENCES currencies(CURRENCY_ID),
	PROJECT_USER_ID INTEGER REFERENCES users(USER_ID) NOT NULL
);

CREATE TABLE risks(
	RISK_ID SERIAL PRIMARY KEY,
	RISK_LOSS_INCOME NUMERIC,
	RISK_LOSS_TIME_INDAY INTEGER,
	RISK_NAME TEXT,
	
	--FK-----------------------------------
	RISK_AVAILABILITY_ID INTEGER REFERENCES availability_risk(AVAILABILITY_ID) NOT NULL,
	RISK_PROJECT_ID INTEGER REFERENCES projects(PROJECT_ID) NOT NULL
);

CREATE TABLE tasks(
	TASK_ID  SERIAL PRIMARY KEY,
	TASK_NAME CHARACTER VARYING( 255 ) NOT NULL,
	TASK_NOTE TEXT,
	
	--FK-----------------------------------
	TASK_STATE_ID INTEGER REFERENCES states_tasks(STATE_ID) NOT NULL,
	TASK_PRIORITY_ID INTEGER REFERENCES priority_tasks(PRIORITY_ID) NOT NULL,
	TASK_PROJECT_ID INTEGER REFERENCES projects(PROJECT_ID) NOT NULL
);








